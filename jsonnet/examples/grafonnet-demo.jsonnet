// Demo: Show the output of Grafonnet integration
// This file demonstrates what gets generated by the Grafonnet library

local grafonnet = import '../lib/grafonnet.libsonnet';

// Simple service setup
local service = 'demo-api';

// Show what's available in the Grafonnet library
{
  // 1. Available query patterns
  availableQueries: std.objectFields(grafonnet.queries),
  
  // 2. Example queries for our demo service
  exampleQueries: {
    serviceHealth: grafonnet.queries.serviceHealth(service),
    requestRate: grafonnet.queries.requestRate(service),
    errorRate: grafonnet.queries.errorRate(service),
    latencyP95: grafonnet.queries.latency.p95(service),
    memoryUsage: grafonnet.queries.resources.memory(service),
  },
  
  // 3. Available panel templates  
  availablePanelTemplates: std.objectFields(grafonnet.panelTemplates),
  
  // 4. Standard monitoring layout (6 panels)
  standardLayoutPanelCount: std.length(grafonnet.layouts.monitoring(service)),
  standardLayoutPanels: [
    panel.title 
    for panel in grafonnet.layouts.monitoring(service)
  ],
  
  // 5. Complete integration output
  completeMonitoring: grafonnet.integration.monitoring(service, 'demo', 'platform'),
  
  // 6. Dashboard template variables
  dashboardVariables: grafonnet.dashboards.monitoring(
    'Demo Dashboard', 
    service
  ).dashboard.templating.list,
  
  // 7. Documentation and usage info
  documentation: grafonnet.docs,
}